# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
clientId.json
terraform-custom-role.json

#Ignore Ansible Vault passwords (if they are stored separately)
.vault_pass

#Ignore inventory files that may contain IPs or sensitive host information
*/inventory
*inventory.ini

#Ignore cache, logs and temporary files
*.retry  # Ansible retry files generated after failed playbook runs
*.log
*.bak  # Backup files
*.swp  # Temporary swap files
*.swo  # Temporary swap files
*.cache/

#Ignore temporary files and IDE configurations
.DS_Store
.idea/
.vscode/